

Cucumber: 


Dependencies:
<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-java -->
	<dependency>
		<groupId>io.cucumber</groupId>
		<artifactId>cucumber-java</artifactId>
		<version>7.10.1</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-testng -->
	<dependency>
		<groupId>io.cucumber</groupId>
		<artifactId>cucumber-testng</artifactId>
		<version>7.10.1</version>
	</dependency>
Steps to Create the layers of Cucumber
Create 3 packages under src/test/java 
*features 
*steps 
*runner















 ● Steps to Create File :-
 Creating features package, 
 Mouseover on it & Right Click --> New --> Other... --> Select File under General Folder --> File Click Next
● Set File name as Login.feature & Click Finish
● U can see a new file Created under features package like slice of Cucumber IMG 
Then it's Fine👍🏻🙂





@Given("Launch the browser and load the url")
public void launch_the_browser_and_load_the_url() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

@When("Enter the username as Demosalesmanager")
public void enter_the_username_as_demosalesmanager() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

@When("Enter the password as crmsfa")
public void enter_the_password_as_crmsfa() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

@When("Click on LoginButton")
public void click_on_login_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

@Then("Verify the title of the page")
public void verify_the_title_of_the_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

Gherkin keyword:
Feature:  Login functionality  of Leaftaps Application
          (Describes the functionality of an appliction)

       

Scenario:  Login with Valid credentials
           (Represents a testcase)
  Given    Launch the browser     -> to represent the precondition of a scenario
  And      Load the url
  And      Enter the username as Demosalesmanager
  And      Enter the password as crmsfa
  When     Click on the Login button -> to represent the test condition  
  Then     Homepage should be displayed -> To represent the positive expected result  

Scenario:  Login with InValid credentials
           (Represents a testcase)
  Given    Launch the browser     -> to represent the precondition of a scenario
  And      Load the url
  And      Enter the username   as Demo
  And      Enter the password   as crms
  When     Click on the Login button -> to represent the test condition  
  But      ErrorMessage should be displayed -> To represent the negative expected result    

Create feature file inside features package

Right click on features package -> Click Other -> Double Click General -> Double click File -> Give Filename with .feature as extension -> Click Finish
Create StepDefinition class inside steps package

Inside StepDefinition create methods for each step defined in the feature file
And put the real codes inside each methods
To integrate StepDefinition and the feature file on the top of each method use @Given/And/When/Then("")
Create CucumberRunner class inside runner package

The runner class should extend AbstractTestNGCucumberTests
Add @CucumberOptions on the top of the Runner Class
Within @CucumberOptions() use some of the attributes features -> to mention the path of the feature file glue -> to mention the package name of StepDefintion monochrome -> to remove the unreadable/junk characters from the console publish -> to get the cucumber report in the console @CucumberOptions(features = "src/test/java/features/Login.feature", glue = "steps" , monochrome = true, publish = true) public class CucumberRunner extends AbstractTestNGCucumberTests{
} 





Static Parmeterization:

2 Scenario - pass different data single quotes

the value 'Demosalesmanager' and 'crmsfa' -inside feature file



in your StepDefinition Class

@When(Enter the userName as {string})
public void username(String username){
driver.findElement(By.id("username").sendKeys(username);

}